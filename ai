# -- coding: utf-8 --

import tflearn
import tensorflow as tf
import Ddz_Core1
from tflearn.data_utils import shuffle
from tflearn.layers.core import input_data, fully_connected
from tflearn.layers.conv import conv_2d
from tflearn.layers.estimator import regression
import numpy as np

import doudizhu


def ai_play(models):
    ddz = Ddz_Core1.Doudizhu()
    ddz.prepare()

    while ddz.is_end != 'Y':
        # 先把  AI 需要的数据记录好
        ai_arr = ddz.cardsToAi()

        allHands = ddz.canGoHands()

        scores = []
        for hand in allHands:
            arr = np.array(ai_arr + ddz.handoutToAi(hand)).reshape([8, 15, 1])
            pred = models[ddz.cur_player_idx()].predict([arr])
            scores.append(pred[0][0])

        sortedarr = sorted(scores, reverse=True)
        think = '考虑: '
        i = 0
        for s in sortedarr:
            think = think + ddz.print_hand(allHands[scores.index(s)]) + ":" + str(s) + " ; "
            i += 1
            if i >= 4:
                break

        b=ddz.player_hand_out(allHands[scores.index(max(scores))])
        ddz.logInfo(think)

    return ddz,b


if __name__ == "__main__":
    num=0
    models = []
    for i in range(0, 3):
        tf.reset_default_graph()
        model = tflearn.DNN(doudizhu.cnn())
        model.load('../data/models' + str(i) + '/fc_model_classify_' + str(i) + '.tflearn')
        models.append(model)

    for i in range(100):
        a,b=ai_play(models)
        if b==0:
            num+=1
        print(num)
